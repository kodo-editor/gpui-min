[workspace]
members = [
    "crates/gpui",
    "crates/gpui_macros",
    "crates/media",
    "crates/refineable",
    "crates/refineable/derive_refineable",
    "crates/semantic_version",
    "crates/sum_tree",
    "crates/util",
]
resolver = "2"

[workspace.dependencies]
gpui = { path = "crates/gpui" }
gpui_macros = { path = "crates/gpui_macros" }
media = { path = "crates/media" }
semantic_version = { path = "crates/semantic_version" }
sum_tree = { path = "crates/sum_tree" }
util = { path = "crates/util" }
anyhow = "1.0.57"
ashpd = { git = "https://github.com/bilelmoussaoui/ashpd", rev = "29f2e1a" }
async-fs = "1.6"
blade-graphics = { git = "https://github.com/zed-industries/blade", rev = "a477c2008db27db0b9f745715e119b3ee7ab7818" }
blade-macros = { git = "https://github.com/zed-industries/blade", rev = "a477c2008db27db0b9f745715e119b3ee7ab7818" }
blade-util = { git = "https://github.com/zed-industries/blade", rev = "a477c2008db27db0b9f745715e119b3ee7ab7818" }
cocoa = "0.25"
core-foundation = { version = "0.9.3" }
ctor = "0.2.6"
derive_more = "0.99.17"
dirs = "4.0"
env_logger = "0.9"
futures = "0.3"
futures-lite = "1.13"
git2 = { version = "0.19", default-features = false }
globset = "0.4"
image = "0.25.1"
# We explicitly disable http2 support in isahc.
isahc = { version = "1.7.2", default-features = false, features = [
    "text-decoding",
] }
itertools = "0.11.0"
lazy_static = "1.4.0"
log = { version = "0.4.16", features = ["kv_unstable_serde"] }
parking_lot = "0.12.1"
profiling = "1"
postage = { version = "0.5", features = ["futures-traits"] }
rand = "0.8.5"
refineable = { path = "./crates/refineable" }
regex = "1.5"
rust-embed = { version = "8.4", features = ["include-exclude"] }
schemars = "0.8"
serde = { version = "1.0", features = ["derive", "rc"] }
serde_derive = { version = "1.0", features = ["deserialize_in_place"] }
serde_json = { version = "1.0", features = ["preserve_order", "raw_value"] }
smallvec = { version = "1.6", features = ["union"] }
smol = "1.2"
tempfile = "3.9.0"
thiserror = "1.0.29"
time = { version = "0.3", features = [
    "macros",
    "parsing",
    "serde",
    "serde-well-known",
    "formatting",
] }
unicase = "2.6"
unicode-segmentation = "1.10"
url = "2.2"
uuid = { version = "1.1.2", features = ["v4", "v5", "serde"] }

[workspace.dependencies.windows]
version = "0.57"
features = [
    "implement",
    "Foundation_Numerics",
    "System",
    "System_Threading",
    "UI_ViewManagement",
    "Wdk_System_SystemServices",
    "Win32_Globalization",
    "Win32_Graphics_Direct2D",
    "Win32_Graphics_Direct2D_Common",
    "Win32_Graphics_DirectWrite",
    "Win32_Graphics_Dwm",
    "Win32_Graphics_Dxgi_Common",
    "Win32_Graphics_Gdi",
    "Win32_Graphics_Imaging",
    "Win32_Graphics_Imaging_D2D",
    "Win32_Security",
    "Win32_Security_Credentials",
    "Win32_Storage_FileSystem",
    "Win32_System_LibraryLoader",
    "Win32_System_Com",
    "Win32_System_Com_StructuredStorage",
    "Win32_System_DataExchange",
    "Win32_System_LibraryLoader",
    "Win32_System_Ole",
    "Win32_System_SystemInformation",
    "Win32_System_SystemServices",
    "Win32_System_Threading",
    "Win32_System_Time",
    "Win32_System_WinRT",
    "Win32_UI_Controls",
    "Win32_UI_HiDpi",
    "Win32_UI_Input_Ime",
    "Win32_UI_Input_KeyboardAndMouse",
    "Win32_UI_Shell",
    "Win32_UI_WindowsAndMessaging",
]

[patch.crates-io]
# Workaround for a broken nightly build of gpui: See #7644 and revisit once 0.5.3 is released.
pathfinder_simd = { git = "https://github.com/servo/pathfinder.git", rev = "4968e819c0d9b015437ffc694511e175801a17c7" }

[profile.dev]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true
lto = "off"

[profile.dev.package."*"]
opt-level = 3
codegen-units = 1
debug = false
incremental = false

[profile.dev.build-override]
opt-level = 3
codegen-units = 1
debug = false
incremental = false

[profile.release]
lto = "fat"
incremental = false
codegen-units = 1

[profile.release.build-override]
opt-level = 3
codegen-units = 1
debug = false
incremental = false

[workspace.lints.clippy]
dbg_macro = "deny"
todo = "deny"

# Motivation: We use `vec![a..b]` a lot when dealing with ranges in text, so
# warning on this rule produces a lot of noise.
single_range_in_vec_init = "allow"

# These are all of the rules that currently have violations in the Zed
# codebase.
#
# We'll want to drive this list down by either:
# 1. fixing violations of the rule and begin enforcing it
# 2. deciding we want to allow the rule permanently, at which point
#    we should codify that separately above.
#
# This list shouldn't be added to; it should only get shorter.
# =============================================================================

# There are a bunch of rules currently failing in the `style` group, so
# allow all of those, for now.
style = { level = "allow", priority = -1 }

# Individual rules that have violations in the codebase:
almost_complete_range = "allow"
arc_with_non_send_sync = "allow"
borrowed_box = "allow"
let_underscore_future = "allow"
map_entry = "allow"
non_canonical_partial_ord_impl = "allow"
reversed_empty_ranges = "allow"
type_complexity = "allow"
